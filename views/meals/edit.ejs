<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <title>Edit Meal</title>
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <script src="https://cdn.tailwindcss.com"></script>
  </head>

  <body class="bg-green-50 text-gray-800 font-sans">

    <div class="max-w-2xl mx-auto p-6 mt-10 bg-white rounded-xl shadow-lg border border-green-200">

      <h1 class="text-3xl font-bold text-green-700 text-center mb-8">Edit Meal</h1>

      <form action="/meals/<%= meal._id %>?_method=PUT" method="POST" class="space-y-6">
        <!-- Drag & Drop Upload -->
        <div id="drop-area" class="w-full p-6 border-2 border-dashed border-green-400 rounded-lg text-center bg-green-100">
          <p class="mb-2 font-medium text-green-800">Drag & drop an image or click to upload</p>
          <input type="file" id="fileElem" accept="image/*" style="display: none;">
          <label for="fileElem" class="cursor-pointer inline-block px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700 transition">
            Select Image
          </label>
          <input type="hidden" name="photoUrl" id="photoUrl" value="<%= meal.photoUrl %>">
          <div id="preview" class="mt-4">
            <% if (meal.photoUrl) { %>
              <img src="<%= meal.photoUrl %>" class="w-full max-w-sm mx-auto rounded shadow-md" />
            <% } %>
          </div>
        </div>

        <!-- Ingredient Search -->
        <div>
          <label for="ingredientSearch" class="block mb-2 font-semibold text-green-800">Search Ingredients</label>
          <input
            type="text"
            id="ingredientSearch"
            class="w-full border border-green-300 px-4 py-2 rounded focus:ring-2 focus:ring-green-500 focus:outline-none"
            placeholder="Type to search..."
          />
          <div id="suggestions" class="border border-green-200 mt-2 rounded max-h-40 overflow-y-auto bg-white"></div>
        </div>

        <!-- Selected ingredients -->
        <div class="mt-4">
          <label class="block mb-2 font-semibold text-green-800">Selected Ingredients</label>
          <div id="selectedIngredients" class="flex flex-wrap gap-2">
            <% meal.ingredients.forEach(ingredient => { %>
              <span class="ingredient-tag bg-green-200 px-3 py-1 rounded-full inline-flex items-center">
                <%= ingredient.name %>
                <button type="button" class="ml-2 text-red-500 font-bold remove">&times;</button>
              </span>
            <% }) %>
          </div>
          <input type="hidden" name="ingredients" id="ingredientsInput" value='<%= JSON.stringify(meal.ingredients.map(i => i.name)) %>' />
        </div>

        <!-- Submit Button -->
        <div class="text-center">
          <button type="submit" class="bg-green-600 hover:bg-green-700 text-white font-semibold px-6 py-2 rounded shadow">
            Save Meal
          </button>
        </div>
      </form>
    </div>

    <script>
      // Image Upload
      const dropArea = document.getElementById("drop-area");
      const fileElem = document.getElementById("fileElem");
      const preview = document.getElementById("preview");
      const photoUrlInput = document.getElementById("photoUrl");

      dropArea.addEventListener("dragover", e => {
        e.preventDefault();
        dropArea.classList.add("bg-green-200");
      });

      dropArea.addEventListener("dragleave", () => {
        dropArea.classList.remove("bg-green-200");
      });

      dropArea.addEventListener("drop", e => {
        e.preventDefault();
        dropArea.classList.remove("bg-green-200");
        const file = e.dataTransfer.files[0];
        handleFile(file);
      });

      fileElem.addEventListener("change", () => {
        if (fileElem.files.length > 0) {
          handleFile(fileElem.files[0]);
        }
      });

      function handleFile(file) {
        const reader = new FileReader();
        reader.onload = e => {
          photoUrlInput.value = e.target.result;
          preview.innerHTML = `<img src="${e.target.result}" class="w-full max-w-sm mx-auto rounded shadow-md" />`;
        };
        reader.readAsDataURL(file);
      }

      // Ingredient Autocomplete
      const searchInput = document.getElementById("ingredientSearch");
      const suggestions = document.getElementById("suggestions");
      const selectedIngredientsDiv = document.getElementById("selectedIngredients");
      const ingredientsInput = document.getElementById("ingredientsInput");

      let selectedIngredients = JSON.parse(ingredientsInput.value || "[]");

      searchInput.addEventListener("input", async () => {
        const query = searchInput.value.trim();
        suggestions.innerHTML = "";

        if (!query) return;

        try {
          const res = await fetch(`/ingredients/search?q=${query}`);
          const data = await res.json();

          data.forEach(ingredient => {
            if (!selectedIngredients.includes(ingredient.name)) {
              const div = document.createElement("div");
              div.className = "p-2 hover:bg-green-100 cursor-pointer";
              div.textContent = ingredient.name;
              div.addEventListener("click", () => {
                selectedIngredients.push(ingredient.name);
                updateSelectedIngredients();
                searchInput.value = "";
                suggestions.innerHTML = "";
              });
              suggestions.appendChild(div);
            }
          });
        } catch (err) {
          console.error("Autocomplete error:", err);
        }
      });

      function updateSelectedIngredients() {
        selectedIngredientsDiv.innerHTML = "";
        selectedIngredients.forEach(name => {
          const tag = document.createElement("span");
          tag.className = "ingredient-tag bg-green-200 px-3 py-1 rounded-full inline-flex items-center";
          tag.innerHTML = `${name}<button type="button" class="ml-2 text-red-500 font-bold remove">&times;</button>`;
          tag.querySelector("button").addEventListener("click", () => {
            selectedIngredients = selectedIngredients.filter(n => n !== name);
            updateSelectedIngredients();
          });
          selectedIngredientsDiv.appendChild(tag);
        });
        ingredientsInput.value = JSON.stringify(selectedIngredients);
      }

      updateSelectedIngredients();
    </script>

  </body>
</html>
